apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "com.vanniktech.maven.publish"

android {
	compileSdkVersion android_compileSdkVersion

	defaultConfig {
		minSdkVersion android_minSdkVersion
		targetSdkVersion android_targetSdkVersion
		versionCode 1
		versionName findProperty("VERSION_NAME", "0.0.0-alpha")
		consumerProguardFiles 'proguard-rules.txt'
		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
		javaCompileOptions {
			annotationProcessorOptions {
				arguments = ["room.schemaLocation": "${rootProject.projectDir}/db-schema".toString()]
			}
		}
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}

	sourceSets {
		androidTest.assets.srcDirs += files("${rootProject.projectDir}/db-schema".toString())
	}

}

androidExtensions {
	// this is needed for Parcelize
	experimental = true
}

dependencies {
	implementation Libs.kotlin_stdlib_jdk7
	implementation Libs.koin_core
	implementation Libs.timber
	implementation Libs.moshi
	implementation Libs.work_runtime
	implementation Libs.work_gcm
	implementation Libs.play_services_nearby
	implementation Libs.play_services_location
	implementation Libs.firebase_jobdispatcher
	implementation Libs.lifecycle_extensions
	implementation Libs.okhttp
	implementation Libs.logging_interceptor
	implementation Libs.retrofit
	implementation Libs.converter_moshi
	implementation Libs.threetenabp
	implementation Libs.geohash

	testImplementation Libs.junit
	testImplementation Libs.mockk
	testImplementation Libs.json

	androidTestImplementation Libs.androidx_test_runner
	androidTestImplementation Libs.espresso_core
	androidTestImplementation Libs.room_testing

	api Libs.room_runtime

	kapt Libs.room_compiler
	kapt Libs.moshi_kotlin_codegen
}

mavenPublish {
	targets {
		internalMaven {
			signing = false
			releaseRepositoryUrl = findProperty("MAVEN_URL", null)
			snapshotRepositoryUrl = findProperty("MAVEN_URL_SNAPSHOT", null)
			repositoryUsername = findProperty("MAVEN_USERNAME", null)
			repositoryPassword = findProperty("MAVEN_PASSWORD", null)
		}
		jcenterMaven {
			signing = false
			releaseRepositoryUrl = findProperty("MAVEN_JCENTER_URL_NOTIFICATIONS", null)
			snapshotRepositoryUrl = findProperty("MAVEN_JCENTER_SNAPSHOT_URL", null)
			repositoryUsername = findProperty("MAVEN_JCENTER_USERNAME", null)
			repositoryPassword = findProperty("MAVEN_JCENTER_PASSWORD", null)
		}
	}
}