apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "com.vanniktech.maven.publish"

android {
	compileSdkVersion android_compileSdkVersion

	defaultConfig {
		minSdkVersion android_minSdkVersion
		targetSdkVersion android_targetSdkVersion
		versionCode 1
		versionName findProperty("VERSION_NAME", "0.0.0-alpha")
		consumerProguardFiles 'proguard-rules.txt'
		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
		javaCompileOptions {
			annotationProcessorOptions {
				arguments = ["room.schemaLocation": "${rootProject.projectDir}/db-schema".toString()]
			}
		}
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}

	sourceSets {
		androidTest.assets.srcDirs += files("${rootProject.projectDir}/db-schema".toString())
	}

}

androidExtensions {
	// this is needed for Parcelize
	experimental = true
}

dependencies {
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

	// main
	implementation 'org.koin:koin-core:2.0.1'
	implementation "com.jakewharton.timber:timber:$jakewharton_timber_version"
	implementation "com.squareup.moshi:moshi:$moshi_version"
	kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

	implementation "androidx.work:work-runtime:$arch_work_manager_version"
	implementation "androidx.work:work-gcm:$arch_work_manager_version"
	implementation "com.google.android.gms:play-services-nearby:$google_play_version"
	implementation "com.google.android.gms:play-services-location:$google_play_version"
	implementation 'com.firebase:firebase-jobdispatcher:0.8.5'
	implementation "androidx.lifecycle:lifecycle-extensions:$arch_lifecycle_version"

	// storage
	api "androidx.room:room-runtime:$room_version"
	kapt "androidx.room:room-compiler:$room_version"

	// backend
	implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
	implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
	implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
	implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
	implementation "com.jakewharton.threetenabp:threetenabp:$jakewharton_threetenabp_version"
	implementation 'ch.hsr:geohash:1.3.0'

	// tests
	testImplementation 'junit:junit:4.12'
	androidTestImplementation 'androidx.test:runner:1.2.0'
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
	androidTestImplementation "androidx.room:room-testing:$room_version"
	testImplementation "io.mockk:mockk:1.9.3"
	testImplementation 'org.json:json:20140107'

}

mavenPublish {
	targets {
		internalMaven {
			signing = false
			releaseRepositoryUrl = findProperty("MAVEN_URL", null)
			snapshotRepositoryUrl = findProperty("MAVEN_URL_SNAPSHOT", null)
			repositoryUsername = findProperty("MAVEN_USERNAME", null)
			repositoryPassword = findProperty("MAVEN_PASSWORD", null)
		}
		jcenterMaven {
			signing = false
			releaseRepositoryUrl = findProperty("MAVEN_JCENTER_URL_NOTIFICATIONS", null)
			snapshotRepositoryUrl = findProperty("MAVEN_JCENTER_SNAPSHOT_URL", null)
			repositoryUsername = findProperty("MAVEN_JCENTER_USERNAME", null)
			repositoryPassword = findProperty("MAVEN_JCENTER_PASSWORD", null)
		}
	}
}